{"version":3,"sources":["components/styles/PhoneBook.module.css","components/ContactForm.jsx","components/ContactList.jsx","components/Filter.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","ContactForm","state","name","number","handleNewValue","ev","target","value","setState","handleNewContact","newContact","newContactDate","props","contacts","find","el","toLowerCase","alert","id","generateUniqueId","handleSubmit","inputNames","this","options","className","styles","form","map","inputName","label","type","onChange","input","onClick","disabled","btn","Component","require","ContactList","contactsList","handleClick","handleClickBtn","contactList","item","contactsItem","width","listBtn","Filter","filterList","handleCnange","findField","findInput","App","filter","handleSaveContact","handleFilterValue","event","currentTarget","handleDeleteContact","prevState","normolizedFilter","toLocaleLowerCase","filteredContacts","contact","includes","container","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6FACAA,EAAOC,QAAU,CAAC,UAAY,6BAA6B,KAAO,wBAAwB,MAAQ,yBAAyB,MAAQ,yBAAyB,IAAM,uBAAuB,YAAc,+BAA+B,aAAe,gCAAgC,UAAY,6BAA6B,UAAY,6BAA6B,QAAU,6B,wNCoElWC,E,4MA7DXC,MAAQ,CACJC,KAAM,GACNC,OAAQ,I,EAGZC,eAAiB,SAAAC,GAAO,IAAD,EACKA,EAAGC,OAAnBC,EADW,EACXA,MAAOL,EADI,EACJA,KAEf,EAAKM,SAAL,eACKN,EAAOK,K,EAIhBE,iBAAmB,WACf,IAGIC,EAHEC,EAAiB,EAAKV,MACX,EAAKW,MAAMC,SACCC,MAAK,SAAAC,GAAE,OAAIA,EAAGb,KAAKc,gBAAkBL,EAAeT,KAAKc,iBAI5DC,MAAM,GAAD,OAAIN,EAAeT,KAAnB,0BAQ3BQ,EAAU,aACNQ,GAAIC,OACDR,GAXoB,EAAKC,MAAMQ,aAAaV,IAGnD,EAAKF,SAAS,CACVN,KAAM,GACNC,OAAQ,M,4CAmBpB,WAAU,IAAD,OACCkB,EAAaC,KAAKV,MAAMW,QAE9B,OACI,uBAAMC,UAAWC,IAAOC,KAAxB,UACKL,EAAWM,KAAI,SAAAC,GAAS,OACrB,wBAAuBJ,UAAWC,IAAOI,MAAzC,UACKD,EACD,uBAAOE,KAAK,OAAuB5B,KAAM0B,EAAWrB,MAAO,EAAKN,MAAM2B,GAAYG,SAAU,EAAK3B,eAAgBoB,UAAWC,IAAOO,OAA3GJ,KAFhBA,MAKhB,wBAAQK,QAASX,KAAKb,iBAAkByB,UAAWZ,KAAKrB,MAAMC,OAASoB,KAAKrB,MAAME,OAAQqB,UAAWC,IAAOU,IAA5G,gC,GAxDUC,aCHpBjB,EAAmBkB,EAAQ,GAsBlBC,EApBK,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,aAAcC,EAAkB,EAAlBA,YAC3BC,EAAiB,SAAApC,GAAE,OACrBmC,EAAYnC,EAAGC,OAAOY,KAE1B,OACI,qBAAKM,UAAWC,IAAOiB,YAAvB,SACI,6BACKH,EAAaZ,KAAI,SAAAgB,GAAI,OAClB,qBAA6BnB,UAAWC,IAAOmB,aAAcC,MAAM,OAAnE,UACKF,EAAKzC,KADV,KACkByC,EAAKxC,OACnB,wBAAQe,GAAIyB,EAAKzB,GAAIe,QAASQ,EAAgBjB,UAAWC,IAAOqB,QAAhE,iBAFK3B,aCDd4B,EARA,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,WAAYC,EAAmB,EAAnBA,aAC1B,OACI,wBAAOzB,UAAWC,IAAOyB,UAAzB,oCAC2B,uBAAOpB,KAAK,OAAO5B,KAAK,GAAGK,MAAOyC,EAAYjB,SAAUkB,EAAczB,UAAWC,IAAO0B,gBCiD5GC,G,kNA3CbnD,MAAQ,CACNY,SAAU,CACR,CAAEK,GAAI,OAAQhB,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEe,GAAI,OAAQhB,KAAM,iBAAkBC,OAAQ,aAC9C,CAAEe,GAAI,OAAQhB,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEe,GAAI,OAAQhB,KAAM,iBAAkBC,OAAQ,cAEhDkD,OAAQ,I,EAGVC,kBAAoB,SAAC5C,GAEnB,EAAKF,UAAS,gBAAGK,EAAH,EAAGA,SAAH,MAAmB,CAC/BA,SAAS,CAAEH,GAAH,mBAAkBG,S,EAI9B0C,kBAAoB,SAAAC,GAClB,EAAKhD,SAAS,CAAE6C,OAAQG,EAAMC,cAAclD,S,EAG9CmD,oBAAsB,SAAAxC,GACpB,EAAKV,UAAS,SAAAmD,GAAS,MACpB,CAAE9C,SAAU8C,EAAU9C,SAASwC,QAAO,SAAAtC,GAAE,OAAIA,EAAGG,KAAOA,U,4CAG3D,WAAU,IAAD,EACsBI,KAAKrB,MAA1BY,EADD,EACCA,SAAUwC,EADX,EACWA,OACZO,EAAmBP,EAAOQ,oBAC1BC,EAAmBjD,EAASwC,QAAO,SAAAU,GAAO,OAAKA,EAAQ7D,KAAKc,cAAcgD,SAASJ,MAEzF,OACE,sBAAKpC,UAAWC,IAAOwC,UAAvB,UACE,2CACA,cAAC,EAAD,CAAa1C,QAAS,CAAC,OAAQ,UAAWH,aAAcE,KAAKgC,kBAAmBzC,SAAUA,IAC1F,4CACA,cAAC,EAAD,CAAQoC,aAAc3B,KAAKiC,kBAAmBP,WAAYK,IAC1D,cAAC,EAAD,CAAad,aAAcuB,EAAkBtB,YAAalB,KAAKoC,6B,GAvCrDtB,cCCH8B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCEdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1Bb,M","file":"static/js/main.d9d7fbec.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PhoneBook_container__2lchy\",\"form\":\"PhoneBook_form__annpn\",\"label\":\"PhoneBook_label__ZNdLZ\",\"input\":\"PhoneBook_input__1gcyU\",\"btn\":\"PhoneBook_btn__ezaOG\",\"contactList\":\"PhoneBook_contactList__31jl-\",\"contactsItem\":\"PhoneBook_contactsItem__gPXnr\",\"findField\":\"PhoneBook_findField__Eciez\",\"findInput\":\"PhoneBook_findInput__1wY7j\",\"listBtn\":\"PhoneBook_listBtn__shWsm\"};","import React, { Component } from 'react'\nimport generateUniqueId from 'generate-unique-id'\n\n\nimport styles from './styles/PhoneBook.module.css'\n\nclass ContactForm extends Component {\n\n    state = {\n        name: '',\n        number: '',\n    }\n\n    handleNewValue = ev => {\n        const { value, name } = ev.target;\n\n        this.setState({\n            [name]: value,\n        })\n    }\n\n    handleNewContact = () => {\n        const newContactDate = this.state;\n        const contacts = this.props.contacts;\n        const checkedName = contacts.find(el => el.name.toLowerCase() === newContactDate.name.toLowerCase())\n        let newContact;\n\n        const sendContactToApp = () => this.props.handleSubmit(newContact);\n        const showMessage = () => alert(`${newContactDate.name} already in contacts`);\n        const resetState = () => {\n            this.setState({\n                name: '',\n                number: '',\n            })\n        }\n        const createNewContact = () => {\n            newContact = {\n                id: generateUniqueId(),\n                ...newContactDate\n            }\n        }\n\n        if (!checkedName) {\n            createNewContact();\n            sendContactToApp();\n        } else {\n            showMessage();\n        }\n        resetState()\n    }\n\n    render() {\n        const inputNames = this.props.options;\n\n        return (\n            <form className={styles.form}>\n                {inputNames.map(inputName => (\n                    <label key={inputName} className={styles.label}>\n                        {inputName}\n                        <input type='text' key={inputName} name={inputName} value={this.state[inputName]} onChange={this.handleNewValue} className={styles.input} />\n                    </label>\n                ))}\n                <button onClick={this.handleNewContact} disabled={!this.state.name || !this.state.number} className={styles.btn}>Add contact</button>\n            </form >\n        )\n    }\n\n}\n\nexport default ContactForm;","// import defaultImg from '../image/defaultImg.jpg'\nimport styles from './styles/PhoneBook.module.css'\n\nconst generateUniqueId = require('generate-unique-id');\n\nconst ContactList = ({ contactsList, handleClick }) => {\n    const handleClickBtn = ev =>\n        handleClick(ev.target.id)\n\n    return (\n        <div className={styles.contactList}>\n            <ul >\n                {contactsList.map(item => (\n                    <li key={generateUniqueId()} className={styles.contactsItem} width=\"70px\">\n                        {item.name}: {item.number}\n                        <button id={item.id} onClick={handleClickBtn} className={styles.listBtn}>X</button>\n                    </li>\n\n                ))}\n\n            </ul>\n        </div>\n    )\n}\n\nexport default ContactList;","// import { useState } from 'react';\nimport styles from './styles/PhoneBook.module.css'\n\n\nconst Filter = ({ filterList, handleCnange }) => {\n    return (\n        <label className={styles.findField}>\n            Find contacts by name: <input type=\"text\" name=\"\" value={filterList} onChange={handleCnange} className={styles.findInput} />\n        </label>\n    )\n}\n\nexport default Filter;\n\n // функции для первой версии фильтра\n    //const [value, setValue] = useState('');\n    // const heandleInputValue = event => {\n    //     const tapValue = event.currentTarget.value;\n    //     setValue(tapValue);\n    //     console.log('tap', tapValue)\n    //     console.log('valueState', value)\n    //     onCnange(value);\n    // }","import React, { Component } from 'react'\n\nimport ContactForm from \"./components/ContactForm\";\nimport ContactList from \"./components/ContactList\";\nimport Filter from './components/Filter';\n\nimport styles from './components/styles/PhoneBook.module.css'\nimport './App.css';\n\n\n\nclass App extends Component {\n\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  }\n\n  handleSaveContact = (newContact) => {\n\n    this.setState(({ contacts }) => ({\n      contacts: [newContact, ...contacts]\n    }))\n  }\n\n  handleFilterValue = event => {\n    this.setState({ filter: event.currentTarget.value });\n  }\n\n  handleDeleteContact = id => {\n    this.setState(prevState =>\n      ({ contacts: prevState.contacts.filter(el => el.id !== id) }))\n  }\n\n  render() {\n    const { contacts, filter } = this.state;\n    const normolizedFilter = filter.toLocaleLowerCase();\n    const filteredContacts = contacts.filter(contact => (contact.name.toLowerCase().includes(normolizedFilter)))\n\n    return (\n      <div className={styles.container}>\n        <h1>Phonebook</h1>\n        <ContactForm options={['name', 'number']} handleSubmit={this.handleSaveContact} contacts={contacts} />\n        <h2>Contacts: </h2>\n        <Filter handleCnange={this.handleFilterValue} filterList={filter} />\n        <ContactList contactsList={filteredContacts} handleClick={this.handleDeleteContact} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n\n // первая версия фильтра(функция получает готовые данные)\n    // const contacts = this.state.contacts;\n    // console.log('get', value)\n\n    // const filteredContacts = contacts.filter(contact => (contact.name.toLowerCase().includes(value.toLowerCase())));\n    // this.setState({ filter: filteredContacts });\n    // console.log('filer', this.state.filter)\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'modern-normalize/modern-normalize.css';\n//import style from './components/'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}