{"version":3,"sources":["components/Statistics/Statistic.module.css","components/Statistics/Section .jsx","components/Statistics/FeedbackOptions.jsx","components/Statistics/Notification.jsx","components/Statistics/Statistics.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Section","title","children","className","styles","FeedbackOptions","heandleGoodFeedback","heandleBadFeedback","heandleNeutralFeedback","type","onClick","feedback_btn","Notification","message","Statistics","good","neutral","bad","total","positiveFeedback","statistic__item","App","state","persentage","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","this","persentageOfFeedback","Math","round","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e050d488.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Statistic_title__1Zf6K\",\"feedback_btn\":\"Statistic_feedback_btn__2Lb2U\",\"message\":\"Statistic_message__1wBXv\",\"statistic__item\":\"Statistic_statistic__item__1HOW3\"};","import styles from './Statistic.module.css'\n\nconst Section = ({ title, children }) => {\n    return (\n        <div className=\"section\">\n            <p className={styles.title}>{title}</p>\n            {children}\n        </div>\n    )\n}\n\nexport default Section;\n\n","import styles from './Statistic.module.css'\n\nconst FeedbackOptions = ({ heandleGoodFeedback, heandleBadFeedback, heandleNeutralFeedback }) => {\n    return (\n        <div className=\"feedback\">\n            <button type=\"button\" onClick={heandleGoodFeedback} className={styles.feedback_btn} > Good</button>\n            <button type=\"button\" onClick={heandleNeutralFeedback} className={styles.feedback_btn}>Neutral</button>\n            <button type=\"button\" onClick={heandleBadFeedback} className={styles.feedback_btn}>Bad </button>\n        </div>\n    )\n}\n\nexport default FeedbackOptions;","import styles from './Statistic.module.css'\n\nconst Notification = ({ message }) => {\n    return (\n        <p className={styles.message}>{message}</p>\n    )\n}\n\nexport default Notification;","import Notification from './Notification'\n\nimport styles from './Statistic.module.css'\n\nconst Statistics = ({ good, neutral, bad, total, positiveFeedback }) => {\n    return (\n        <div >\n            {total === 0 ? <Notification message=\"No feedback given.\" /> :\n                <ul className=\"statistic__list\">\n                    <li className={styles.statistic__item}>Good: {good}</li>\n                    <li className={styles.statistic__item}>Neutral: {neutral}</li>\n                    <li className={styles.statistic__item}>Bad: {bad}</li>\n                    <li className={styles.statistic__item}>Total: {total}</li>\n                    <li className={styles.statistic__item}>Positive feedback: {positiveFeedback}%</li>\n                </ul>}\n        </div >\n    )\n}\n\nexport default Statistics;","import React, { Component } from 'react'\n\nimport './App.css';\n\nimport Section from \"./components/Statistics/Section \";\nimport FeedbackOptions from \"./components/Statistics/FeedbackOptions\";\nimport Statistics from './components/Statistics/Statistics'\n\nclass App extends Component {\n\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n    total: 0,\n    persentage: 0\n  }\n\n  heandleGoodFeedback = () => {\n    this.setState(prevState => ({\n      good: prevState.good + 1,\n    }))\n    this.countTotalFeedback()\n    this.countPositiveFeedbackPercentage()\n  }\n\n  heandleNeutralFeedback = () => {\n    this.setState(prevState => ({\n      neutral: prevState.neutral + 1,\n    }))\n    this.countTotalFeedback()\n    this.countPositiveFeedbackPercentage()\n\n  }\n  heandleBadFeedback = () => {\n    this.setState(prevState => ({\n      bad: prevState.bad + 1,\n    }))\n    this.countTotalFeedback()\n    this.countPositiveFeedbackPercentage()\n\n  }\n\n  countTotalFeedback = () => {\n    this.setState(prevState => ({\n      total: prevState.total + 1\n    }))\n  }\n\n  countPositiveFeedbackPercentage = () => {\n    this.setState((state) => {\n      return { persentage: state.good * 100 / state.total }\n    })\n  }\n\n  render() {\n    const { good, neutral, bad, total, persentage } = this.state;\n    const persentageOfFeedback = Math.round(persentage);\n\n    return (\n      <div className=\"App\">\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions heandleGoodFeedback={() => this.heandleGoodFeedback()}\n            heandleBadFeedback={this.heandleBadFeedback}\n            heandleNeutralFeedback={this.heandleNeutralFeedback} />\n        </Section>\n        <Section title=\"Statistics\">\n          <Statistics good={good} neutral={neutral} bad={bad} total={total} positiveFeedback={persentageOfFeedback} />\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'modern-normalize/modern-normalize.css';\n//import style from './components/'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}